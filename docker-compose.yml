version: "3"

services:

  pgadmin:
    container_name: docker_django_pgadmin_container
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    # networks:
    #   - postgres
    depends_on:
      - postgres_db

  web:
    restart: always
    image: 0bd5d2d23ed1
    expose:
      - "80"
    ports:
      - "80:80"
    links:
      - postgres_db:postgres_db
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PORT: ${DB_PORT}
      DB_PASSWORD: ${DB_PASSWORD}
      CDN_NAME: ${CDN_NAME}
      CDN_API_KEY: ${CDN_API_KEY}
      CDN_API_SECRET: ${CDN_API_SECRET}
      SMTP_HOST_USER: ${SMTP_HOST_USER}
      SMTP_HOST_PASSWORD: ${SMTP_HOST_PASSWORD}
    # networks:
    #   - postgres
    depends_on:
      - postgres_db
      - memcached
    command: sh -c "python manage.py migrate && python manage.py collectstatic --no-input && python manage.py clearcache && gunicorn core.wsgi -b 0.0.0.0:80"

  postgres_db:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      
    ports:
      - "5432:5432"
    
    expose:
      - "5432"
    volumes:
      - database-data:/var/lib/postgresql/data/

  memcached:
    restart: always
    image: memcached:latest
    ports:
      - "11211:11211"

# networks:
#   postgres:
#     driver: bridge

volumes:
  database-data:
  pgadmin:
